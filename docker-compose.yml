services:
  postgres-db:
    image: postgres
    container_name: ${POSTGRES_HOST}
    env_file: .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - krs_app
    volumes:
      - krs-database-vol:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      start_period: 0s
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    container_name: ${SERVER_HOST}
    build: ./server
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    env_file: .env
    networks:
      - krs_app
    volumes:
      - ./server:/server
      - krs-server-node-modules-vol:/server/node_modules
    depends_on:
      postgres-db:
        condition: service_healthy

  client:
    container_name: ${CLIENT_HOST}
    build: ./client
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    env_file: .env
    networks:
      - krs_app
    volumes:
      - ./client:/client
      - krs-client-node-modules-vol:/client/node_modules

networks:
  krs_app:
    driver: bridge

volumes:
  krs-server-node-modules-vol:
    name: "krs-server-node-modules-vol"
  krs-database-vol:
    name: "krs-database-vol"
  krs-client-node-modules-vol:
    name: "krs-client-node-modules-vol"